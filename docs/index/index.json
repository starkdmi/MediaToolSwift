{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressiontask\/init(destination:)","title":"init(destination: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressiontask\/iscancelled","title":"var isCancelled: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressiontask\/progress","title":"var progress: Progress","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressiontask\/writingprogress","title":"var writingProgress: Progress","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressiontask\/cancel()","title":"func cancel()","type":"method"}],"path":"\/documentation\/mediatoolswift\/compressiontask","title":"CompressionTask","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/filesizeobserver\/init(url:queue:onchange:)","title":"init(url: URL, queue: DispatchQueue?, onChange: (UInt64) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/filesizeobserver\/finish()","title":"func finish()","type":"method"}],"path":"\/documentation\/mediatoolswift\/filesizeobserver","title":"FileSizeObserver","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/customimageformat\/identifier","title":"var identifier: String","type":"property"},{"path":"\/documentation\/mediatoolswift\/customimageformat\/isanimationsupported","title":"var isAnimationSupported: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/customimageformat\/islowquality","title":"var isLowQuality: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/customimageformat\/uttype","title":"var utType: CFString?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/customimageformat\/write(frames:to:skipmetadata:settings:orientation:ishdr:primaryindex:metadata:)","title":"func write(frames: [ImageFrame], to: URL, skipMetadata: Bool, settings: ImageSettings, orientation: CGImagePropertyOrientation?, isHDR: Bool?, primaryIndex: Int, metadata: [CFString : Any]?) throws","type":"method"}],"path":"\/documentation\/mediatoolswift\/customimageformat","title":"CustomImageFormat","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/mediainfo\/extendedinfo","title":"var extendedInfo: ExtendedFileInfo?","type":"property"},{"path":"\/documentation\/mediatoolswift\/mediainfo\/url","title":"var url: URL","type":"property"}],"path":"\/documentation\/mediatoolswift\/mediainfo","title":"MediaInfo","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/audioinfo\/init(url:duration:codec:bitrate:extendedinfo:)","title":"init(url: URL, duration: Double, codec: CompressionAudioCodec?, bitrate: Int?, extendedInfo: ExtendedFileInfo?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/audioinfo\/bitrate","title":"let bitrate: Int?","type":"property"},{"path":"\/documentation\/mediatoolswift\/audioinfo\/codec","title":"let codec: CompressionAudioCodec?","type":"property"},{"path":"\/documentation\/mediatoolswift\/audioinfo\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/mediatoolswift\/audioinfo\/extendedinfo","title":"let extendedInfo: ExtendedFileInfo?","type":"property"},{"path":"\/documentation\/mediatoolswift\/audioinfo\/url","title":"let url: URL","type":"property"}],"path":"\/documentation\/mediatoolswift\/audioinfo","title":"AudioInfo","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/audiotool\/convert(source:destination:filetype:settings:edit:skipsourcemetadata:custommetadata:copyextendedfilemetadata:cachedirectory:overwrite:deletesourcefile:progressqueue:callback:)","title":"static func convert(source: URL, destination: URL, fileType: AudioFileType, settings: CompressionAudioSettings?, edit: Set<AudioOperation>, skipSourceMetadata: Bool, customMetadata: [AVMetadataItem], copyExtendedFileMetadata: Bool, cacheDirectory: URL?, overwrite: Bool, deleteSourceFile: Bool, progressQueue: DispatchQueue, callback: (CompressionState) -> Void) async -> CompressionTask","type":"method"},{"path":"\/documentation\/mediatoolswift\/audiotool\/getinfo(source:)","title":"static func getInfo(source: URL) async throws -> AudioInfo","type":"method"}],"path":"\/documentation\/mediatoolswift\/audiotool","title":"AudioTool","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionaudiosettings\/init(codec:bitrate:quality:samplerate:)","title":"init(codec: CompressionAudioCodec, bitrate: CompressionAudioBitrate, quality: AVAudioQuality?, sampleRate: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionaudiosettings\/bitrate","title":"let bitrate: CompressionAudioBitrate","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionaudiosettings\/codec","title":"let codec: CompressionAudioCodec","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionaudiosettings\/quality","title":"let quality: AVAudioQuality?","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionaudiosettings\/samplerate","title":"let sampleRate: Int?","type":"property"}],"path":"\/documentation\/mediatoolswift\/compressionaudiosettings","title":"CompressionAudioSettings","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/==(_:_:)","title":"static func == (CompressionError, CompressionError) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/init(description:)","title":"init(description: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/audiotracknotfound","title":"static let audioTrackNotFound: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/cannotoverwrite","title":"static let cannotOverWrite: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/croppingnotallowed","title":"static let croppingNotAllowed: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/croppingoutofbounds","title":"static let croppingOutOfBounds: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/destinationfileexists","title":"static let destinationFileExists: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/emptyimage","title":"static let emptyImage: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/failedtocreateimagefile","title":"static let failedToCreateImageFile: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/failedtogeneratethumbnails","title":"static let failedToGenerateThumbnails: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/failedtoreadaudio","title":"static let failedToReadAudio: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/failedtoreadimage","title":"static let failedToReadImage: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/failedtoreadmetadata","title":"static let failedToReadMetadata: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/failedtoreadvideo","title":"static let failedToReadVideo: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/failedtosaveimage","title":"static let failedToSaveImage: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/failedtowriteaudio","title":"static let failedToWriteAudio: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/failedtowritevideo","title":"static let failedToWriteVideo: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/invalidfiletype","title":"static let invalidFileType: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/invalidvideocodec","title":"static let invalidVideoCodec: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/notsupportedonvisionos","title":"static let notSupportedOnVisionOS: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/redundantcompression","title":"static let redundantCompression: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/sourcefilenotfound","title":"static let sourceFileNotFound: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/unknownimageformat","title":"static let unknownImageFormat: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/unsupportedimageformat","title":"static let unsupportedImageFormat: CompressionError","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/videotracknotfound","title":"static let videoTrackNotFound: CompressionError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/compressionerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mediatoolswift\/compressionerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mediatoolswift\/compressionerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/compressionerror","title":"CompressionError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionvideosettings\/init(codec:bitrate:quality:size:framerate:preservealphachannel:profile:color:maxkeyframeinterval:hardwareacceleration:edit:)","title":"init(codec: AVVideoCodecType?, bitrate: CompressionVideoBitrate, quality: Double?, size: CompressionVideoSize, frameRate: Int?, preserveAlphaChannel: Bool, profile: CompressionVideoProfile?, color: CompressionColorPrimary?, maxKeyFrameInterval: Int?, hardwareAcceleration: CompressionHardwareAcceleration, edit: Set<VideoOperation>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionvideosettings\/bitrate","title":"let bitrate: CompressionVideoBitrate","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionvideosettings\/codec","title":"let codec: AVVideoCodecType?","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionvideosettings\/color","title":"let color: CompressionColorPrimary?","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionvideosettings\/edit","title":"let edit: Set<VideoOperation>","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionvideosettings\/framerate","title":"let frameRate: Int?","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionvideosettings\/hardwareacceleration","title":"let hardwareAcceleration: CompressionHardwareAcceleration","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionvideosettings\/maxkeyframeinterval","title":"let maxKeyFrameInterval: Int?","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionvideosettings\/preservealphachannel","title":"let preserveAlphaChannel: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionvideosettings\/profile","title":"let profile: CompressionVideoProfile?","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionvideosettings\/quality","title":"let quality: Double?","type":"property"},{"path":"\/documentation\/mediatoolswift\/compressionvideosettings\/size","title":"let size: CompressionVideoSize","type":"property"}],"path":"\/documentation\/mediatoolswift\/compressionvideosettings","title":"CompressionVideoSettings","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/crop\/==(_:_:)","title":"static func == (Crop, Crop) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/crop\/init(origin:size:)","title":"init(origin: CGPoint, size: CGSize)","type":"init"},{"path":"\/documentation\/mediatoolswift\/crop\/init(rect:)","title":"init(rect: CGRect)","type":"init"},{"path":"\/documentation\/mediatoolswift\/crop\/init(size:aligment:)","title":"init(size: CGSize, aligment: Alignment)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/crop\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/crop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/crop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/crop","title":"Crop","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/extendedfileinfo\/init(location:wherefrom:originalfilename:)","title":"init(location: CLLocation?, whereFrom: [String]?, originalFilename: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/extendedfileinfo\/location","title":"let location: CLLocation?","type":"property"},{"path":"\/documentation\/mediatoolswift\/extendedfileinfo\/originalfilename","title":"let originalFilename: String?","type":"property"},{"path":"\/documentation\/mediatoolswift\/extendedfileinfo\/wherefrom","title":"let whereFrom: [String]?","type":"property"}],"path":"\/documentation\/mediatoolswift\/extendedfileinfo","title":"ExtendedFileInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageframe\/canvasheight","title":"var canvasHeight: Double?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageframe\/canvassize","title":"var canvasSize: CGSize?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageframe\/canvaswidth","title":"var canvasWidth: Double?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageframe\/cgimage","title":"var cgImage: CGImage?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageframe\/ciimage","title":"var ciImage: CIImage?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageframe\/delaytime","title":"var delayTime: Double?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageframe\/frameinfoarray","title":"var frameInfoArray: [CFDictionary]?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageframe\/loopcount","title":"var loopCount: Int?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageframe\/shouldresize","title":"var shouldResize: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageframe\/size","title":"var size: CGSize","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageframe\/unclampeddelaytime","title":"var unclampedDelayTime: Double?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/imageframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/imageframe","title":"ImageFrame","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageinfo\/init(format:size:hasalpha:ishdr:orientation:framescount:framerate:duration:)","title":"init(format: ImageFormat?, size: CGSize, hasAlpha: Bool, isHDR: Bool, orientation: CGImagePropertyOrientation?, framesCount: Int, frameRate: Int?, duration: Double?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageinfo\/duration","title":"let duration: Double?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageinfo\/format","title":"let format: ImageFormat?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageinfo\/framerate","title":"let frameRate: Int?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageinfo\/framescount","title":"let framesCount: Int","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageinfo\/hasalpha","title":"let hasAlpha: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageinfo\/isanimated","title":"var isAnimated: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageinfo\/ishdr","title":"let isHDR: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageinfo\/orientation","title":"var orientation: CGImagePropertyOrientation?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imageinfo\/size","title":"let size: CGSize","type":"property"}],"path":"\/documentation\/mediatoolswift\/imageinfo","title":"ImageInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imagesettings\/init(format:size:quality:framerate:skipanimation:preservealphachannel:embedthumbnail:optimizecolorforsharing:backgroundcolor:edit:preferredframework:)","title":"init(format: ImageFormat?, size: ImageSize, quality: Double?, frameRate: Int?, skipAnimation: Bool, preserveAlphaChannel: Bool, embedThumbnail: Bool, optimizeColorForSharing: Bool, backgroundColor: CGColor?, edit: Set<ImageOperation>, preferredFramework: ImageFramework)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imagesettings\/backgroundcolor","title":"var backgroundColor: CGColor?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imagesettings\/edit","title":"var edit: Set<ImageOperation>","type":"property"},{"path":"\/documentation\/mediatoolswift\/imagesettings\/embedthumbnail","title":"var embedThumbnail: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/imagesettings\/format","title":"var format: ImageFormat?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imagesettings\/framerate","title":"var frameRate: Int?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imagesettings\/optimizecolorforsharing","title":"var optimizeColorForSharing: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/imagesettings\/preferredframework","title":"var preferredFramework: ImageFramework","type":"property"},{"path":"\/documentation\/mediatoolswift\/imagesettings\/preservealphachannel","title":"var preserveAlphaChannel: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/imagesettings\/quality","title":"var quality: Double?","type":"property"},{"path":"\/documentation\/mediatoolswift\/imagesettings\/size","title":"var size: ImageSize","type":"property"},{"path":"\/documentation\/mediatoolswift\/imagesettings\/skipanimation","title":"var skipAnimation: Bool","type":"property"}],"path":"\/documentation\/mediatoolswift\/imagesettings","title":"ImageSettings","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imagetool\/convert(source:destination:settings:skipmetadata:overwrite:deletesourcefile:)","title":"static func convert(source: URL, destination: URL, settings: ImageSettings, skipMetadata: Bool, overwrite: Bool, deleteSourceFile: Bool) throws -> ImageInfo","type":"method"},{"path":"\/documentation\/mediatoolswift\/imagetool\/getinfo(source:)","title":"static func getInfo(source: URL) throws -> ImageInfo","type":"method"}],"path":"\/documentation\/mediatoolswift\/imagetool","title":"ImageTool","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/init(url:resolution:framerate:totalframes:duration:videocodec:videobitrate:hasalpha:ishdr:hasaudio:audiocodec:audiobitrate:extendedinfo:)","title":"init(url: URL, resolution: CGSize, frameRate: Int, totalFrames: Int, duration: Double, videoCodec: AVVideoCodecType, videoBitrate: Int?, hasAlpha: Bool, isHDR: Bool, hasAudio: Bool, audioCodec: CompressionAudioCodec?, audioBitrate: Int?, extendedInfo: ExtendedFileInfo?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/audiobitrate","title":"let audioBitrate: Int?","type":"property"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/audiocodec","title":"let audioCodec: CompressionAudioCodec?","type":"property"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/extendedinfo","title":"let extendedInfo: ExtendedFileInfo?","type":"property"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/framerate","title":"let frameRate: Int","type":"property"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/hasalpha","title":"let hasAlpha: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/hasaudio","title":"let hasAudio: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/ishdr","title":"let isHDR: Bool","type":"property"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/resolution","title":"let resolution: CGSize","type":"property"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/totalframes","title":"let totalFrames: Int","type":"property"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/url","title":"let url: URL","type":"property"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/videobitrate","title":"let videoBitrate: Int?","type":"property"},{"path":"\/documentation\/mediatoolswift\/videoinfo\/videocodec","title":"let videoCodec: AVVideoCodecType","type":"property"}],"path":"\/documentation\/mediatoolswift\/videoinfo","title":"VideoInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videothumbnail\/actualtime","title":"let actualTime: Double","type":"property"},{"path":"\/documentation\/mediatoolswift\/videothumbnail\/image","title":"let image: CGImage","type":"property"},{"path":"\/documentation\/mediatoolswift\/videothumbnail\/requestedtime","title":"let requestedTime: Double","type":"property"}],"path":"\/documentation\/mediatoolswift\/videothumbnail","title":"VideoThumbnail","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videothumbnailfile\/format","title":"let format: ImageFormat?","type":"property"},{"path":"\/documentation\/mediatoolswift\/videothumbnailfile\/size","title":"let size: CGSize","type":"property"},{"path":"\/documentation\/mediatoolswift\/videothumbnailfile\/time","title":"let time: Double","type":"property"},{"path":"\/documentation\/mediatoolswift\/videothumbnailfile\/url","title":"let url: URL","type":"property"}],"path":"\/documentation\/mediatoolswift\/videothumbnailfile","title":"VideoThumbnailFile","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videothumbnailrequest\/init(time:url:)","title":"init(time: Double, url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videothumbnailrequest\/time","title":"let time: Double","type":"property"},{"path":"\/documentation\/mediatoolswift\/videothumbnailrequest\/url","title":"let url: URL","type":"property"}],"path":"\/documentation\/mediatoolswift\/videothumbnailrequest","title":"VideoThumbnailRequest","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videotool\/convert(source:destination:filetype:videosettings:optimizefornetworkuse:skipaudio:audiosettings:skipsourcemetadata:custommetadata:copyextendedfilemetadata:cachedirectory:overwrite:deletesourcefile:progressqueue:callback:)","title":"static func convert(source: URL, destination: URL, fileType: VideoFileType, videoSettings: CompressionVideoSettings, optimizeForNetworkUse: Bool, skipAudio: Bool, audioSettings: CompressionAudioSettings?, skipSourceMetadata: Bool, customMetadata: [AVMetadataItem], copyExtendedFileMetadata: Bool, cacheDirectory: URL?, overwrite: Bool, deleteSourceFile: Bool, progressQueue: DispatchQueue, callback: (CompressionState) -> Void) async -> CompressionTask","type":"method"},{"path":"\/documentation\/mediatoolswift\/videotool\/getinfo(source:)","title":"static func getInfo(source: URL) async throws -> VideoInfo","type":"method"},{"path":"\/documentation\/mediatoolswift\/videotool\/thumbnailfiles(of:at:settings:transfrom:timetolerancebefore:timetoleranceafter:completion:)","title":"static func thumbnailFiles(of: AVAsset, at: [VideoThumbnailRequest], settings: ImageSettings, transfrom: Bool, timeToleranceBefore: Double, timeToleranceAfter: Double, completion: (Result<[VideoThumbnailFile], CompressionError>) -> Void)","type":"method"},{"path":"\/documentation\/mediatoolswift\/videotool\/thumbnailimages(for:at:size:transfrom:timetolerancebefore:timetoleranceafter:completion:)","title":"static func thumbnailImages(for: AVAsset, at: [Double], size: CGSize?, transfrom: Bool, timeToleranceBefore: Double, timeToleranceAfter: Double, completion: ([VideoThumbnail]) -> Void) throws","type":"method"}],"path":"\/documentation\/mediatoolswift\/videotool","title":"VideoTool","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageprocessor","title":"ImageProcessor","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/alignment\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/mediatoolswift\/alignment\/bottomleading","title":"case bottomLeading","type":"case"},{"path":"\/documentation\/mediatoolswift\/alignment\/bottomtrailing","title":"case bottomTrailing","type":"case"},{"path":"\/documentation\/mediatoolswift\/alignment\/center","title":"case center","type":"case"},{"path":"\/documentation\/mediatoolswift\/alignment\/leading","title":"case leading","type":"case"},{"path":"\/documentation\/mediatoolswift\/alignment\/top","title":"case top","type":"case"},{"path":"\/documentation\/mediatoolswift\/alignment\/topleading","title":"case topLeading","type":"case"},{"path":"\/documentation\/mediatoolswift\/alignment\/toptrailing","title":"case topTrailing","type":"case"},{"path":"\/documentation\/mediatoolswift\/alignment\/trailing","title":"case trailing","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/alignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/alignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/alignment","title":"Alignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/audiofiletype\/aifc","title":"case aifc","type":"case"},{"path":"\/documentation\/mediatoolswift\/audiofiletype\/aiff","title":"case aiff","type":"case"},{"path":"\/documentation\/mediatoolswift\/audiofiletype\/amr","title":"case amr","type":"case"},{"path":"\/documentation\/mediatoolswift\/audiofiletype\/caf","title":"case caf","type":"case"},{"path":"\/documentation\/mediatoolswift\/audiofiletype\/m4a","title":"case m4a","type":"case"},{"path":"\/documentation\/mediatoolswift\/audiofiletype\/wav","title":"case wav","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/audiofiletype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/audiofiletype\/value","title":"var value: AVFileType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/audiofiletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/audiofiletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/audiofiletype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/audiofiletype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mediatoolswift\/audiofiletype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/audiofiletype","title":"AudioFileType","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/audiooperation\/==(_:_:)","title":"static func == (AudioOperation, AudioOperation) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/audiooperation\/cut(from:to:)","title":"case cut(from: Double, to: Double)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/audiooperation\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/audiooperation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/audiooperation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/audiooperation","title":"AudioOperation","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionaudiobitrate\/==(_:_:)","title":"static func == (CompressionAudioBitrate, CompressionAudioBitrate) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionaudiobitrate\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionaudiobitrate\/value(_:)","title":"case value(Int)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionaudiobitrate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/compressionaudiobitrate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/compressionaudiobitrate","title":"CompressionAudioBitrate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionaudiocodec\/aac","title":"case aac","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionaudiocodec\/alac","title":"case alac","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionaudiocodec\/default","title":"case `default`","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionaudiocodec\/flac","title":"case flac","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionaudiocodec\/lpcm","title":"case lpcm","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionaudiocodec\/opus","title":"case opus","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionaudiocodec\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionaudiocodec\/formatid","title":"var formatId: AudioFormatID?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionaudiocodec\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/compressionaudiocodec\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionaudiocodec\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionaudiocodec\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mediatoolswift\/compressionaudiocodec\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/compressionaudiocodec","title":"CompressionAudioCodec","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressioncolorprimary\/ebu3213","title":"case ebu3213","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressioncolorprimary\/itu2020","title":"case itu2020","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressioncolorprimary\/itu2020_hlg","title":"case itu2020_hlg","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressioncolorprimary\/itu2020_pq","title":"case itu2020_pq","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressioncolorprimary\/itu709_2","title":"case itu709_2","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressioncolorprimary\/p3d65","title":"case p3D65","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressioncolorprimary\/smptec","title":"case smpteC","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressioncolorprimary\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/compressioncolorprimary\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/compressioncolorprimary","title":"CompressionColorPrimary","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionhardwareacceleration\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionhardwareacceleration\/disabled","title":"case disabled","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionhardwareacceleration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/compressionhardwareacceleration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/compressionhardwareacceleration","title":"CompressionHardwareAcceleration","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionstate\/==(_:_:)","title":"static func == (CompressionState, CompressionState) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionstate\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionstate\/completed(_:)","title":"case completed(any MediaInfo)","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionstate\/failed(_:)","title":"case failed(any Error)","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionstate\/started","title":"case started","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/compressionstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/compressionstate","title":"CompressionState","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionvideobitrate\/==(_:_:)","title":"static func == (CompressionVideoBitrate, CompressionVideoBitrate) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionvideobitrate\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideobitrate\/dynamic(_:)","title":"case dynamic((Int) -> Int)","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideobitrate\/encoder","title":"case encoder","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideobitrate\/filesize(_:)","title":"case filesize(Double)","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideobitrate\/source","title":"case source","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideobitrate\/value(_:)","title":"case value(Int)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionvideobitrate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/compressionvideobitrate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/compressionvideobitrate","title":"CompressionVideoBitrate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionvideoprofile\/h264baseline","title":"case h264Baseline","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideoprofile\/h264high","title":"case h264High","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideoprofile\/h264main","title":"case h264Main","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideoprofile\/hevcmain","title":"case hevcMain","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideoprofile\/hevcmain10","title":"case hevcMain10","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideoprofile\/hevcmain42210","title":"case hevcMain42210","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideoprofile\/value(_:)","title":"case value(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionvideoprofile\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionvideoprofile\/profile(for:bitspercomponent:bandwidth:)","title":"static func profile(for: AVVideoCodecType, bitsPerComponent: Int, bandwidth: CompressionVideoProfileBandwidth) -> CompressionVideoProfile?","type":"method"}],"path":"\/documentation\/mediatoolswift\/compressionvideoprofile","title":"CompressionVideoProfile","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionvideoprofilebandwidth\/high","title":"case high","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideoprofilebandwidth\/low","title":"case low","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideoprofilebandwidth\/medium","title":"case medium","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionvideoprofilebandwidth\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/compressionvideoprofilebandwidth\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/compressionvideoprofilebandwidth","title":"CompressionVideoProfileBandwidth","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/compressionvideosize\/dynamic(_:)","title":"case dynamic((CGSize) -> CompressionVideoSize)","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideosize\/fit(_:)","title":"case fit(CGSize)","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideosize\/original","title":"case original","type":"case"},{"path":"\/documentation\/mediatoolswift\/compressionvideosize\/scale(_:)","title":"case scale(CGSize)","type":"case"}],"path":"\/documentation\/mediatoolswift\/compressionvideosize","title":"CompressionVideoSize","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageformat\/==(_:_:)","title":"static func == (ImageFormat, ImageFormat) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageformat\/bmp","title":"case bmp","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageformat\/custom(_:)","title":"case custom(String)","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageformat\/gif","title":"case gif","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageformat\/heic","title":"case heic","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageformat\/heics","title":"case heics","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageformat\/heif","title":"case heif","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageformat\/heif10","title":"case heif10","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageformat\/ico","title":"case ico","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageformat\/jpeg","title":"case jpeg","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageformat\/jpeg2000","title":"case jpeg2000","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageformat\/pdf","title":"case pdf","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageformat\/png","title":"case png","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageformat\/tiff","title":"case tiff","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageformat\/init(_:)-222f1","title":"init?(UTType)","type":"init"},{"path":"\/documentation\/mediatoolswift\/imageformat\/init(_:)-5077z","title":"init?(CFString)","type":"init"},{"path":"\/documentation\/mediatoolswift\/imageformat\/init(_:)-8apln","title":"init?(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageformat\/uttype","title":"var utType: CFString?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageformat\/allcases","title":"static var allCases: [ImageFormat]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageformat\/registercustomformat(_:)","title":"static func registerCustomFormat(any CustomImageFormat)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/imageformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/imageformat","title":"ImageFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageframework\/cgimage","title":"case cgImage","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageframework\/ciimage","title":"case ciImage","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageframework\/vimage","title":"case vImage","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageframework\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/imageframework\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/imageframework","title":"ImageFramework","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/==(_:_:)","title":"static func == (ImageOperation, ImageOperation) -> Bool","type":"op"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/_(_:_:)-7vh31","title":"static func < (ImageOperation, ImageOperation) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/flip","title":"case flip","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/imageprocessing(_:)","title":"case imageProcessing(ImageProcessor)","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/rotate(_:fill:)","title":"case rotate(Rotate, fill: RotationFill)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/'...(_:)-3rr6b","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/'...(_:)-7hq27","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/_(_:_:)-9axwl","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/_=(_:_:)-97sbh","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/_=(_:_:)-9vl7b","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/imageoperation\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imageoperation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/imageoperation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/imageoperation","title":"ImageOperation","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imagesize\/==(_:_:)","title":"static func == (ImageSize, ImageSize) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imagesize\/crop(fit:options:)","title":"case crop(fit: CGSize?, options: Crop)","type":"case"},{"path":"\/documentation\/mediatoolswift\/imagesize\/fit(_:)","title":"case fit(CGSize)","type":"case"},{"path":"\/documentation\/mediatoolswift\/imagesize\/original","title":"case original","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/imagesize\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/imagesize\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/imagesize","title":"ImageSize","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/rotate\/angle(_:)","title":"case angle(Float)","type":"case"},{"path":"\/documentation\/mediatoolswift\/rotate\/clockwise","title":"case clockwise","type":"case"},{"path":"\/documentation\/mediatoolswift\/rotate\/counterclockwise","title":"case counterClockwise","type":"case"},{"path":"\/documentation\/mediatoolswift\/rotate\/upsidedown","title":"case upsideDown","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/rotate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/rotate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/rotate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/rotate","title":"Rotate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/rotationfill\/blur(kernel:)","title":"case blur(kernel: UInt32)","type":"case"},{"path":"\/documentation\/mediatoolswift\/rotationfill\/color(alpha:red:green:blue:)","title":"case color(alpha: UInt8, red: UInt8, green: UInt8, blue: UInt8)","type":"case"},{"path":"\/documentation\/mediatoolswift\/rotationfill\/crop","title":"case crop","type":"case"}],"path":"\/documentation\/mediatoolswift\/rotationfill","title":"RotationFill","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videofiletype\/m4v","title":"case m4v","type":"case"},{"path":"\/documentation\/mediatoolswift\/videofiletype\/mov","title":"case mov","type":"case"},{"path":"\/documentation\/mediatoolswift\/videofiletype\/mp4","title":"case mp4","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videofiletype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videofiletype\/value","title":"var value: AVFileType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videofiletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/videofiletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videofiletype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videofiletype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mediatoolswift\/videofiletype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/videofiletype","title":"VideoFileType","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videoframeprocessor\/==(_:_:)","title":"static func == (VideoFrameProcessor, VideoFrameProcessor) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videoframeprocessor\/image(_:)","title":"case image((CIImage, CIContext, Double) -> CIImage?)","type":"case"},{"path":"\/documentation\/mediatoolswift\/videoframeprocessor\/imagecomposition(_:)","title":"case imageComposition((CIImage, CIContext, Double) -> CIImage)","type":"case"},{"path":"\/documentation\/mediatoolswift\/videoframeprocessor\/pixelbuffer(_:)","title":"case pixelBuffer((CVPixelBuffer, CVPixelBufferPool, CIContext, Double) -> CVPixelBuffer?)","type":"case"},{"path":"\/documentation\/mediatoolswift\/videoframeprocessor\/samplebuffer(_:)","title":"case sampleBuffer((CMSampleBuffer) -> CMSampleBuffer?)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videoframeprocessor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videoframeprocessor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/videoframeprocessor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/videoframeprocessor","title":"VideoFrameProcessor","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videooperation\/==(_:_:)","title":"static func == (VideoOperation, VideoOperation) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videooperation\/crop(_:)","title":"case crop(Crop)","type":"case"},{"path":"\/documentation\/mediatoolswift\/videooperation\/cut(from:to:)","title":"case cut(from: Double, to: Double)","type":"case"},{"path":"\/documentation\/mediatoolswift\/videooperation\/flip","title":"case flip","type":"case"},{"path":"\/documentation\/mediatoolswift\/videooperation\/mirror","title":"case mirror","type":"case"},{"path":"\/documentation\/mediatoolswift\/videooperation\/process(_:)","title":"case process(VideoFrameProcessor)","type":"case"},{"path":"\/documentation\/mediatoolswift\/videooperation\/rotate(_:)","title":"case rotate(Rotate)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videooperation\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mediatoolswift\/videooperation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mediatoolswift\/videooperation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mediatoolswift\/videooperation","title":"VideoOperation","type":"enum"}],"path":"\/documentation\/mediatoolswift","title":"MediaToolSwift","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}